import setofstacks.SetOfStacks;
import setofstacks.Stack;

public class Main {
    /**
     * Реализовать структуру данных SetOfStacks.
     * Решаемая задача:
     * Слишком высокая стопка тарелок может развалиться. Следовательно, в реальной жизни, когда высота стопки превысила
     * бы некоторое пороговое значение, мы начали бы складывать тарелки в новую стопку. Реализовать структуру
     * SetOfStacks, имитирующую реальную ситуацию. Она должна состоять из нескольких стеков, новый стек создается, как
     * только предыдущий достигнет порогового значения. Методы push() и pop() должны вести себя так же, как при работе
     * с одним стеком (то есть метод pop() должен возвращать те же значения, которые бы он возвращал при использовании
     * одного большого стека). Реализуйте функцию popAt(int index), которая осуществляет операцию pop c заданным
     * внутренним стеком.
     * Результат:
     * 1. Реализованная структура данных и алгоритм решения задачи
     * 2. Провести асимптотический анализ реализованного алгоритма
     **/
    public static void main(String[] args) {
        SetOfStacks<Integer> setOfStacks = new SetOfStacks<>(5, 5);
        for (int i = 0; i < 25; i++) {
            setOfStacks.push(i);
            System.out.println(setOfStacks);
        }

        for (int i = 0; i < 26; i++) {
            setOfStacks.popAt(4);
            System.out.println(setOfStacks);
        }



    }

}
